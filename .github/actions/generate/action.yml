name: Generate Article
description: 'Set up Python and generate Medium article'

inputs:
  topic:
    description: 'Topic of the article'
    required: false
    default: 'Serverless computing in India: pros and cons'
  publish:
    description: 'Publish to Medium (true|false)'
    required: false
    default: 'false'
  tags:
    description: 'Comma-separated tags (max 5)'
    required: false
    default: ''
  audience:
    description: 'Audience level (beginner|intermediate|advanced)'
    required: false
    default: 'beginner'
  tone:
    description: 'Tone (friendly|professional|practical|conversational)'
    required: false
    default: 'practical'
  model:
    description: 'Perplexity model (sonar|sonar-reasoning|sonar-pro|sonar-deep-research)'
    required: false
    default: 'sonar'
  minutes:
    description: 'Estimated reading time'
    required: false
    default: '10'
  outline_depth:
    description: 'Outline depth (integer)'
    required: false
    default: '3'
  include_code:
    description: 'Include code snippets? (true|false)'
    required: false
    default: 'true'
  status:
    description: 'Medium publish status (draft|public|unlisted)'
    required: false
    default: 'draft'
  canonical_url:
    description: 'Canonical URL (optional)'
    required: false
    default: ''

runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      id: setup-python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ steps.setup-python.outputs.python-version }}-

    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Generate (and optionally publish) article
      shell: bash
      run: |
        set -e # Exit on error
        TOPIC="${{ inputs.topic }}"
        AUDIENCE="${{ inputs.audience }}"
        TONE="${{ inputs.tone }}"
        MODEL="${{ inputs.model }}"
        MINUTES="${{ inputs.minutes }}"
        OUTLINE_DEPTH="${{ inputs.outline_depth }}"
        INCLUDE_CODE="${{ inputs.include_code }}"
        TAGS="${{ inputs.tags }}"
        PUBLISH="${{ inputs.publish }}"
        STATUS="${{ inputs.status }}"
        CANONICAL_URL="${{ inputs.canonical_url }}"

        CODE_FLAG=""
        if [ "$INCLUDE_CODE" = "false" ]; then
          CODE_FLAG="--no-code"
        fi
        PUBLISH_FLAG=""
        if [ "$PUBLISH" = "true" ]; then
          PUBLISH_FLAG="--publish --status $STATUS"
        fi
        TAGS_ARG=""
        if [ -n "$TAGS" ]; then
          TAGS_ARG="--tags $(echo $TAGS | tr ',' ' ')"
        fi

        python -m app.cli \
          --topic "$TOPIC" \
          --audience "$AUDIENCE" \
          --tone "$TONE" \
          --model "$MODEL" \
          --minutes "$MINUTES" \
          --outline-depth "$OUTLINE_DEPTH" \
          $CODE_FLAG \
          $PUBLISH_FLAG \
          --canonical-url "$CANONICAL_URL" \
          $TAGS_ARG
